name: Deploy BOS-Workspace App Components
on:
  workflow_call:
    inputs:
      cli-version:
        required: false
        description: "Version of BOS CLI to use for deploy (e.g. 0.3.0)"
        type: string
        default: "0.3.6"
      deploy-env:
        required: false
        description: "Environment to deploy component code to (e.g. mainnet, testnet)"
        type: string
        default: "mainnet"
      app-name:
        required: true
        description: "Workspace app name to deploy (from /apps directory)"
        type: string
      working-directory:
        required: false
        description: "Relative path to bos-workspace root"
        type: string
        default: "./"
      deploy-account-address:
        required: true
        description: "Account under which component code should be deployed"
        type: string
      signer-account-address:
        required: true
        description: "Account which will be used for signing deploy transaction, frequently the same as deploy-account-address"
        type: string
      signer-public-key:
        required: true
        description: "Public key for signing transactions in the format: `ed25519:<public_key>`"
        type: string
    secrets:
      SIGNER_PRIVATE_KEY:
        description: "Private key in `ed25519:<private_key>` format for signing transaction"
        required: true

jobs:
  deploy-widgets:
    runs-on: ubuntu-latest
    name: Deploy Widgets
    env:
      BOS_DEPLOY_ENV: ${{ inputs.deploy-env }}
      BOS_APP_NAME: ${{ inputs.app-name }}
      BOS_WORKSPACE_DIRECTORY: ${{ inputs.working-directory }}
      BOS_DEPLOY_ACCOUNT_ID: ${{ inputs.deploy-account-address }}
      BOS_SIGNER_ACCOUNT_ID: ${{ inputs.signer-account-address }}
      BOS_SIGNER_PUBLIC_KEY: ${{ inputs.signer-public-key }}
      BOS_SIGNER_PRIVATE_KEY: ${{ secrets.SIGNER_PRIVATE_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install bos-cli-rs
        run: |
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/FroVolod/bos-cli-rs/releases/download/v${{ inputs.cli-version }}/bos-cli-installer.sh | sh

      - name: Install near-cli-rs
        run: |
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/near/near-cli-rs/releases/latest/download/near-cli-rs-installer.sh | sh

      - name: Configure non-archival RPC endpoint
        run: |
          which near
          mkdir -p ~/.config/near-cli
          touch ~/.config/near-cli/config.toml
          echo -e "credentials_home_dir = \"/home/runner/.near-credentials\"\n[network_connection.mainnet]\nnetwork_name = \"mainnet\"\nrpc_url = \"https://rpc.mainnet.near.org/\"\nwallet_url = \"https://app.mynearwallet.com/\"\nexplorer_transaction_url = \"https://nearblocks.io/txns/\"" > ~/.config/near-cli/config.toml

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install bos-workspace globally
        run: |
          npm install -g bos-workspace

      - name: Build the workspaces
        run: |
          cd "$BOS_WORKSPACE_DIRECTORY"
          bos-workspace build

      - name: Deploy widgets
        run: |
          pwd
          cd "$BOS_WORKSPACE_DIRECTORY/build/$BOS_APP_NAME"
          bos components deploy "$BOS_DEPLOY_ACCOUNT_ID" sign-as "$BOS_SIGNER_ACCOUNT_ID" network-config "$BOS_DEPLOY_ENV" sign-with-plaintext-private-key --signer-public-key "$BOS_SIGNER_PUBLIC_KEY" --signer-private-key "$BOS_SIGNER_PRIVATE_KEY" send
          cat ~/.config/near-cli/config.toml
